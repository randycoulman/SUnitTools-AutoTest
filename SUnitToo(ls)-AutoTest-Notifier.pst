<?xml version="1.0"?><st-source><!-- Name: SUnitToo(ls)-AutoTest-NotifierNotice: The MIT LicenseCopyright (c) 2012-2013 , Randy CoulmanPermission is hereby granted, free of charge, to any person obtaining a copyof this software and associated documentation files (the "Software"), to dealin the Software without restriction, including without limitation the rightsto use, copy, modify, merge, publish, distribute, sublicense, and/or sellcopies of the Software, and to permit persons to whom the Software isfurnished to do so, subject to the following conditions:The above copyright notice and this permission notice shall be included inall copies or substantial portions of the Software.THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS ORIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THEAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHERLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS INTHE SOFTWARE.Comment: # SUnitToo(ls)-AutoTest-NotifierUse the desktop environment's notification system to report the results of a test run.  This package is Linux-only for now, but contributions for other platforms are welcome.SUnitToo(ls)-AutoTest is licensed under the MIT license.  See the Copyright tab in the RB, the 'notice' property of this package, or the License.txt file on GitHub.SUnitToo(ls)-AutoTest's primary home is the [Cincom Public Store Repository](http://www.cincomsmalltalk.com/CincomSmalltalkWiki/Public+Store+Repository).  Check there for the latest version.  It is also on [GitHub](https://github.com/randycoulman/SUnitTools-AutoTest).SUnitToo(ls)-AutoTest was developed in VW 7.9.1, but is compatible with VW 7.7 and later.  If you find any incompatibilities with VW 7.7 or later, let me know (see below for contact information) or file an issue on GitHub.See the package comment on SUnitToo(ls)-AutoTest for more information.# Understanding the Code`AutoTestNotifier` is the main class.  There is a menu item definition implemented as an extension on `VisualLauncher`.# AcknowledgementsSUnitToo(ls)-AutoTest was inspired by the [Pharo Autotest](http://www.squeaksource.com/Autotest.html) package by Laurent Laffont.# ContributingI'm happy to receive bug fixes and improvements to this package.  If you'd like to contribute, please publish your changes as a "branch" (non-integer) version in the Public Store Repository and contact me as outlined below to let me know.  I will merge your changes back into the "trunk" as soon as I can review them.# Contact InformationIf you have any questions about SUnitToo(ls)-AutoTest-Notifier and how to use it, feel free to contact me.* Web site: http://randycoulman.com* Blog: Courageous Software (http://randycoulman.com/blog)* E-mail: randy _at_ randycoulman _dot_ com* Twitter: @randycoulman* GitHub: randycoulmanDbIdentifier: /Users/randy/repositories/store/RCSmalltalkDbTrace: 1460DbUsername: randyDbVersion: 2DevelopmentPrerequisites: #(#(#any 'Base VisualWorks' '') #(#any 'SUnitToo' '') #(#any 'SUnitToo(ls)-AutoTest' ''))Namespace: Smalltalk.SUnitToolsAutoTestNotifierPackageName: SUnitToo(ls)-AutoTest-NotifierParcel: #('SUnitToo(ls)-AutoTest-Notifier')PrerequisiteDescriptions: #(#(#name 'Base VisualWorks' #componentType #bundle) #(#name 'SUnitToo' #componentType #package) #(#name 'SUnitToo(ls)-AutoTest' #componentType #package))PrerequisiteParcels: #(#('Base VisualWorks' '') #('SUnitToo' '') #('SUnitToo(ls)-AutoTest' ''))PrintStringCache: (2,randy)Version: 2Date: 7:26:39 AM April 10, 2013 --><time-stamp>From VisualWorksÂ® Personal Use Edition, 7.9.1 of October 18, 2012 on April 10, 2013 at 7:26:39 AM</time-stamp><do-it>(Dialog confirm: 'You are filing-in a Parcel source file!\\While this is possible it will not have\the same effect as loading the parcel.\None of the Parcel''s prerequisites will\be loaded and none of its load actions\will be performed.\\Are you sure you want to file-in?' withCRs) ifFalse: [self error: 'Parcel file-in abandoned.  Choose terminate or close.']</do-it><name-space><name>SUnitToolsAutoTestNotifier</name><environment>Smalltalk</environment><private>false</private><imports>			private Smalltalk.*			private SUnitToolsAutoTest.*			</imports><category></category><attributes><package>SUnitToo(ls)-AutoTest-Notifier</package></attributes></name-space><class><name>AutoTestNotifier</name><environment>SUnitToolsAutoTestNotifier</environment><super>Core.Object</super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>SUnitToo(ls)-AutoTest-Notifier</package></attributes></class><comment><class-id>SUnitToolsAutoTestNotifier.AutoTestNotifier</class-id><body>AutoTestNotifier is the main entry point for the AutoTest Notifier.  It listens for test run status updates and pops up a desktop notification with the final results of the test run.</body></comment><shared-variable><name>Current</name><environment>SUnitToolsAutoTestNotifier.AutoTestNotifier</environment><private>false</private><constant>false</constant><category>singleton</category><attributes><package>SUnitToo(ls)-AutoTest-Notifier</package></attributes></shared-variable><methods><class-id>SUnitToolsAutoTestNotifier.AutoTestNotifier</class-id> <category>private</category><body package="SUnitToo(ls)-AutoTest-Notifier">announcer	^AutoTest current announcer</body><body package="SUnitToo(ls)-AutoTest-Notifier">detailTextForResults: aTestResults	| result hitCount |	aTestResults isEmpty ifTrue: [^'No tests to run'].	result := aTestResults printString.	hitCount := aTestResults hitCount.	hitCount isApplicable		ifTrue: 			[result := result , (' - &lt;1p&gt; hit(s)' expandMacrosWith: hitCount count)].	^result</body><body package="SUnitToo(ls)-AutoTest-Notifier">notify: aString icon: anIcon	UnixProcess fork: 'notify-send'		arguments: (Array				with: '-i'				with: anIcon				with: 'AutoTest'				with: aString)</body><body package="SUnitToo(ls)-AutoTest-Notifier">notifyResults: aTestResults	self notify: (self detailTextForResults: aTestResults)		icon: aTestResults notifierIcon</body><body package="SUnitToo(ls)-AutoTest-Notifier">testRunAborted	self notify: 'Aborted: Test resource error' icon: 'error'</body><body package="SUnitToo(ls)-AutoTest-Notifier">testRunCompleted: aTestRunCompleted	self notifyResults: aTestRunCompleted results</body></methods><methods><class-id>SUnitToolsAutoTestNotifier.AutoTestNotifier</class-id> <category>activation</category><body package="SUnitToo(ls)-AutoTest-Notifier">activate	(self announcer)		when: TestRunCompleted send: #testRunCompleted: to: self;		when: TestRunAborted send: #testRunAborted to: self</body><body package="SUnitToo(ls)-AutoTest-Notifier">deactivate	self announcer unsubscribe: self</body></methods><methods><class-id>SUnitToolsAutoTestNotifier.AutoTestNotifier class</class-id> <category>activation</category><body package="SUnitToo(ls)-AutoTest-Notifier">activate	self isActive ifTrue: [^self].	self current activate</body><body package="SUnitToo(ls)-AutoTest-Notifier">deactivate	self isActive ifFalse: [^self].	self current deactivate.	Current := nil</body></methods><methods><class-id>SUnitToolsAutoTestNotifier.AutoTestNotifier class</class-id> <category>private</category><body package="SUnitToo(ls)-AutoTest-Notifier">current	^Current ifNil: [Current := self new]</body><body package="SUnitToo(ls)-AutoTest-Notifier">isActive	^Current notNil</body></methods><methods><class-id>SUnitToolsAutoTest.AutoTestResults</class-id> <category>accessing</category><body package="SUnitToo(ls)-AutoTest-Notifier">notifierIcon	self allPassed ifFalse: [^'error'].	self hitCount isOK ifFalse: [^'important'].	^'info'</body></methods><methods><class-id>Tools.VisualLauncher</class-id> <category>menus</category><body package="SUnitToo(ls)-AutoTest-Notifier">autoTestNotifier	&lt;	menuItem: 'AutoTest Notifier'	nameKey: nil	enablement: nil	indication: #isAutoTestNotifierActive	menu: #(#menuBar #tools)	position: 19.2&gt;	AutoTestNotifier isActive		ifTrue: [AutoTestNotifier deactivate]		ifFalse: [AutoTestNotifier activate]</body></methods><methods><class-id>Tools.VisualLauncher</class-id> <category>private</category><body package="SUnitToo(ls)-AutoTest-Notifier">isAutoTestNotifierActive	^AutoTestNotifier isActive</body></methods><do-it>"Imported Classes:"</do-it><do-it>self error: 'Attempting to file-in parcel imports.  Choose terminate or close'</do-it><class><name>Object</name><environment>Core</environment><super></super><private>false</private><indexed-type>none</indexed-type><inst-vars></inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Kernel-Objects</category><attributes><package>Kernel-Objects</package></attributes></class><class><name>AutoTestResults</name><environment>SUnitToolsAutoTest</environment><super>SUnit.Results</super><private>false</private><indexed-type>none</indexed-type><inst-vars>hitCounter skips </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category></category><attributes><package>SUnitToo(ls)-AutoTest</package></attributes></class><class><name>VisualLauncher</name><environment>Tools</environment><super>UI.ApplicationModel</super><private>false</private><indexed-type>none</indexed-type><inst-vars>menuBar toolBar textCollector toolDock </inst-vars><class-inst-vars></class-inst-vars><imports></imports><category>Tools-Misc</category><attributes><package>Tools-Misc</package></attributes></class></st-source>